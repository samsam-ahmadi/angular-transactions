name: CI

on:
  workflow_run:
    workflows: ["Security scans"]     # must equal the other file’s name:
    types: [completed]       

env:
  NODE_VERSION: 20
  REGISTRY: ghcr.io/${{ github.repository }}

permissions:
  contents: write
  packages: write

jobs:
  frontend-quality:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Frontend      
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
          cache-dependency-path: Frontend/package-lock.json
      - run: npm ci
      - name: ESLint
        run: npm run lint
      - name: Unit tests
        run: npm run test
      - name: Build production
        run: npm run build -- --configuration production
      - name: Install static server
        run: npm install -g http-server
      - name: Run E2E tests against local prod build
        run: |
          http-server dist/frontend/browser -p 8090 &  # ⬅️ adjust path if needed
          npx wait-on http://localhost:8090
          npx cypress run --config baseUrl=http://localhost:8090   


  build-images:
    needs: frontend-quality
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push frontend
        uses: docker/build-push-action@v5
        with:
          context: ./Frontend
          push: true
          tags: ${{ env.REGISTRY }}-frontend:${{ github.sha }}

      - name: Build & push backend
        uses: docker/build-push-action@v5
        with:
          context: ./Backend
          push: true
          tags: ${{ env.REGISTRY }}-backend:${{ github.sha }}

  deploy-frontend:
    needs: build-images
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - run: |
          cd Frontend
          npm ci
          npm run build -- --configuration production --base-href /angular-transactions/
      - uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: Frontend/dist/frontend/browser

  deploy-backend:
    needs: build-images
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Render deploy
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.RENDER_SERVICE_ID }}
          api-key:    ${{ secrets.RENDER_API_KEY }}
